version: '3.8'

services:
  frontend:
    build:
      context: ${PROJECT_ROOT}/frontend
      dockerfile: ${PROJECT_ROOT}/docker/prod/frontend/Dockerfile
    volumes:
      - ${PROJECT_ROOT}/frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:3001
    depends_on:
      - backend

  backend:
    build:
      context: ${PROJECT_ROOT}/backend
      dockerfile: ${PROJECT_ROOT}/docker/prod/backend/Dockerfile
    volumes:
      - ${PROJECT_ROOT}/backend:/app
      - /app/node_modules
      - ${PROJECT_ROOT}/shared:/shared
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=thinkleap
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_URL=redis://redis:6379
      # In Docker environment, use wildcard to accept connections from any origin during development
      - CORS_ORIGIN=*
    depends_on:
      - db
      - redis

  redis:
    image: redis:alpine
    ports:
      - "6380:6379"

  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=thinkleap